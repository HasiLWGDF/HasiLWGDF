cmake_minimum_required (VERSION 3.8.0 FATAL_ERROR)

if (DEFINED ENV{HASILWGDF_TOOLCHAIN_RAN})
  return ()
endif ()
set (ENV{HASILWGDF_TOOLCHAIN_RAN} true)
list (APPEND HASILWGDF_SUPPORTED_PLATFORMS
    "Android"
    "AndroidTV"
    "FreeBSD"
    "iOS"
    "Linux"
    "macOS"
    "OpenBSD"
    "OpenXR"
    "PlayStation"
    "Switch"
    "tvOS"
    "UWP"
    "watchOS"
    "WearOS"
    "Web"
    "Windows"
    "Xbox"
    "3DS"
)
list (APPEND HASILWGDF_SUPPORTED_PLATFORM_VARIATIONS
    "AppleSimulator" "AppleOS" "AppleAll"
    "PSP" "PSVita" "PS3" "PS4" "PS5" 
    "WinPhone10" "WinPhone8_1" "WinStore10" "WinStore8_1"
    "Native" "HTML5" "NodeJS" "WASM"
    "Windows10" "Windows8_1"
    "XboxOne" "XboxSeriesS" "XboxSeriesX" "Xbox360"
)
set (CURRENT_GEN ${CMAKE_GENERATOR})
set (HASILWGDF_PLATFORM "" CACHE STRING "The platform you want to build for.")
list (FIND HASILWGDF_SUPPORTED_PLATFORMS ${HASILWGDF_PLATFORM} HASILWGDF_PLATFORM_INDEX)
set (HASILWGDF_PLATFORM_VARIANT "" CACHE STRING "The variation of a platform you want to build for (Applicable for specific platforms).")
list (FIND HASILWGDF_SUPPORTED_PLATFORM_VARIATIONS ${HASILWGDF_PLATFORM_VARIANT} HASILWGDF_PLATFORM_VARIANT_INDEX)
if (HASILWGDF_PLATFORM_INDEX EQUAL -1)
  message (FATAL_ERROR "Unsupported platform specified. Please choose from: ${HASILWGDF_SUPPORTED_PLATFORMS}")
endif ()
if (HASILWGDF_PLATFORM_VARIANT_INDEX EQUAL -1)
  message (FATAL_ERROR "Unsupported platform variation specified. Please choose from: ${HASILWGDF_SUPPORTED_PLATFORM_VARIATIONS}")
endif ()
message ("Configuring for platform: ${HASILWGDF_PLATFORM}")

if (${CURRENT_GEN} STREQUAL "Ninja")
  if (HASILWGDF_PLATFORM STREQUAL "Android")
    set (CMAKE_SYSTEM_NAME "Android")
  elseif (HASILWGDF_PLATFORM STREQUAL "AndroidTV")
  elseif (HASILWGDF_PLATFORM STREQUAL "FreeBSD")
    set (CMAKE_SYSTEM_NAME "FreeBSD")
  elseif (HASILWGDF_PLATFORM STREQUAL "iOS")
    set (CMAKE_SYSTEM_NAME "FreeBSD")
  elseif (HASILWGDF_PLATFORM STREQUAL "Linux")
    set (CMAKE_SYSTEM_NAME "Linux")

    set (CMAKE_SYSTEM_NAME "iOS")
    if (HASILWGDF_PLATFORM_VARIANT STREQUAL "AppleSimulator")
      set (CMAKE_OSX_SYSROOT "iphonesimulator")
    elseif (HASILWGDF_PLATFORM_VARIANT STREQUAL "AppleOS")
      set (CMAKE_OSX_SYSROOT "iphoneos")
    elseif (HASILWGDF_PLATFORM_VARIANT STREQUAL "AppleAll")
      set (CMAKE_IOS_INSTALL_COMBINED YES)
    else ()
      message (FATAL_ERROR "Variation \"${HASILWGDF_PLATFORM_VARIANT}\" for platform \"${HASILWGDF_PLATFORM}\" is not supported.")
    endif ()
  elseif (HASILWGDF_PLATFORM STREQUAL "macOS")
    set (CMAKE_SYSTEM_NAME "Darwin")
    if (HASILWGDF_PLATFORM_VARIANT NOT STREQUAL "")
      message (FATAL_ERROR "Variation \"${HASILWGDF_PLATFORM_VARIANT}\" for platform \"${HASILWGDF_PLATFORM}\" is not supported.")
    endif ()
  elseif (HASILWGDF_PLATFORM STREQUAL "OpenBSD")
    set (CMAKE_SYSTEM_NAME "OpenBSD")
  elseif (HASILWGDF_PLATFORM STREQUAL "OpenXR")
  elseif (HASILWGDF_PLATFORM STREQUAL "PlayStation")
  elseif (HASILWGDF_PLATFORM STREQUAL "Switch")
    set (CMAKE_SYSTEM_NAME "NintendoSwitch")
  elseif (HASILWGDF_PLATFORM STREQUAL "tvOS")
    set (CMAKE_SYSTEM_NAME "tvOS")
    if (HASILWGDF_PLATFORM_VARIANT STREQUAL "AppleSimulator")
      set (CMAKE_OSX_SYSROOT "appletvsimulator")
    elseif (HASILWGDF_PLATFORM_VARIANT STREQUAL "AppleOS")
      set (CMAKE_OSX_SYSROOT "appletvos")
    elseif (HASILWGDF_PLATFORM_VARIANT STREQUAL "AppleAll")
      set (CMAKE_IOS_INSTALL_COMBINED YES)
    else ()
      message (FATAL_ERROR "Variation \"${HASILWGDF_PLATFORM_VARIANT}\" for platform \"${HASILWGDF_PLATFORM}\" is not supported.")
    endif ()
  elseif (HASILWGDF_PLATFORM STREQUAL "watchOS")
    set (CMAKE_SYSTEM_NAME "watchOS")
    if (HASILWGDF_PLATFORM_VARIANT STREQUAL "AppleSimulator")
      set (CMAKE_OSX_SYSROOT "watchsimulator")
    elseif (HASILWGDF_PLATFORM_VARIANT STREQUAL "AppleOS")
      set (CMAKE_OSX_SYSROOT "watchos")
    elseif (HASILWGDF_PLATFORM_VARIANT STREQUAL "AppleAll")
      set (CMAKE_IOS_INSTALL_COMBINED YES)
    else ()
      message (FATAL_ERROR "Variation \"${HASILWGDF_PLATFORM_VARIANT}\" for platform \"${HASILWGDF_PLATFORM}\" is not supported.")
    endif ()
  elseif (HASILWGDF_PLATFORM STREQUAL "WearOS")
  elseif (HASILWGDF_PLATFORM STREQUAL "Windows")
    set (CMAKE_SYSTEM_NAME "Windows")
  elseif (HASILWGDF_PLATFORM STREQUAL "3DS")
    set (CMAKE_SYSTEM_NAME "Nintendo3DS")
  else ()
    message (FATAL_ERROR "Unable to use generator \"${CURRENT_GEN}\" with platform \"${HASILWGDF_PLATFORM}\".")
  endif ()
elseif (${CURRENT_GEN} STREQUAL "MinGW Makefiles" AND CMAKE_HOST_WIN32)
  if (HASILWGDF_PLATFORM STREQUAL "Windows")
    set (CMAKE_SYSTEM_NAME "Windows")
  else ()
    message (FATAL_ERROR "Unable to use generator \"${CURRENT_GEN}\" with platform \"${HASILWGDF_PLATFORM}\".")
  endif ()
elseif (${CURRENT_GEN} STREQUAL "MSYS Makefiles" AND CMAKE_HOST_WIN32)
  if (HASILWGDF_PLATFORM STREQUAL "Windows")
    set (CMAKE_SYSTEM_NAME "iOS")
  else ()
    message (FATAL_ERROR "Unable to use generator \"${CURRENT_GEN}\" with platform \"${HASILWGDF_PLATFORM}\".")
  endif ()
elseif (${CURRENT_GEN} STREQUAL "Unix Makefiles" AND CMAKE_HOST_APPLE)
  if (HASILWGDF_PLATFORM STREQUAL "iOS")
    set (CMAKE_SYSTEM_NAME "iOS")
    if (HASILWGDF_PLATFORM_VARIANT STREQUAL "AppleSimulator")
      set (CMAKE_OSX_SYSROOT "iphonesimulator")
    elseif (HASILWGDF_PLATFORM_VARIANT STREQUAL "AppleOS")
      set (CMAKE_OSX_SYSROOT "iphoneos")
    elseif (HASILWGDF_PLATFORM_VARIANT STREQUAL "AppleAll")
      set (CMAKE_IOS_INSTALL_COMBINED YES)
    else ()
      message (FATAL_ERROR "Variation \"${HASILWGDF_PLATFORM_VARIANT}\" for platform \"${HASILWGDF_PLATFORM}\" is not supported.")
    endif ()
  elseif (HASILWGDF_PLATFORM STREQUAL "macOS")
    set (CMAKE_SYSTEM_NAME "Darwin")
    if (HASILWGDF_PLATFORM_VARIANT NOT STREQUAL "")
      message (FATAL_ERROR "Variation \"${HASILWGDF_PLATFORM_VARIANT}\" for platform \"${HASILWGDF_PLATFORM}\" is not supported.")
    endif ()
  elseif (HASILWGDF_PLATFORM STREQUAL "tvOS")
    set (CMAKE_SYSTEM_NAME "tvOS")
    if (HASILWGDF_PLATFORM_VARIANT STREQUAL "AppleSimulator")
      set (CMAKE_OSX_SYSROOT "appletvsimulator")
    elseif (HASILWGDF_PLATFORM_VARIANT STREQUAL "AppleOS")
      set (CMAKE_OSX_SYSROOT "appletvos")
    elseif (HASILWGDF_PLATFORM_VARIANT STREQUAL "AppleAll")
      set (CMAKE_IOS_INSTALL_COMBINED YES)
    else ()
      message (FATAL_ERROR "Variation \"${HASILWGDF_PLATFORM_VARIANT}\" for platform \"${HASILWGDF_PLATFORM}\" is not supported.")
    endif ()
  elseif (HASILWGDF_PLATFORM STREQUAL "watchOS")
    set (CMAKE_SYSTEM_NAME "watchOS")
    if (HASILWGDF_PLATFORM_VARIANT STREQUAL "AppleSimulator")
      set (CMAKE_OSX_SYSROOT "watchsimulator")
    elseif (HASILWGDF_PLATFORM_VARIANT STREQUAL "AppleOS")
      set (CMAKE_OSX_SYSROOT "watchos")
    elseif (HASILWGDF_PLATFORM_VARIANT STREQUAL "AppleAll")
      set (CMAKE_IOS_INSTALL_COMBINED YES)
    else ()
      message (FATAL_ERROR "Variation \"${HASILWGDF_PLATFORM_VARIANT}\" for platform \"${HASILWGDF_PLATFORM}\" is not supported.")
    endif ()
  else ()
    message (FATAL_ERROR "Unable to use generator \"${CURRENT_GEN}\" with platform \"${HASILWGDF_PLATFORM}\".")
  endif ()
elseif (${CURRENT_GEN} STREQUAL "Unix Makefiles" AND CMAKE_HOST_UNIX)
  if (HASILWGDF_PLATFORM STREQUAL "Android")
    set (CMAKE_SYSTEM_NAME "Android")
  elseif (HASILWGDF_PLATFORM STREQUAL "AndroidTV")
  elseif (HASILWGDF_PLATFORM STREQUAL "FreeBSD")
    set (CMAKE_SYSTEM_NAME "FreeBSD")
  elseif (HASILWGDF_PLATFORM STREQUAL "Linux")
    set (CMAKE_SYSTEM_NAME "Linux")
  elseif (HASILWGDF_PLATFORM STREQUAL "OpenBSD")
    set (CMAKE_SYSTEM_NAME "OpenBSD")
  elseif (HASILWGDF_PLATFORM STREQUAL "OpenXR")
  elseif (HASILWGDF_PLATFORM STREQUAL "PlayStation")
  elseif (HASILWGDF_PLATFORM STREQUAL "Switch")
    set (CMAKE_SYSTEM_NAME "NintendoSwitch")
  elseif (HASILWGDF_PLATFORM STREQUAL "WearOS")
  elseif (HASILWGDF_PLATFORM STREQUAL "3DS")
    set (CMAKE_SYSTEM_NAME "Nintendo3DS")
  endif ()
elseif (${CURRENT_GEN} MATCHES "Visual Studio" AND CMAKE_HOST_WIN32)
  if (HASILWGDF_PLATFORM STREQUAL "UWP")
  elseif (HASILWGDF_PLATFORM STREQUAL "Windows")
    set (CMAKE_SYSTEM_NAME "Windows")
  elseif (HASILWGDF_PLATFORM STREQUAL "Xbox")
  else ()
    message (FATAL_ERROR "Unable to use generator \"${CURRENT_GEN}\" with platform \"${HASILWGDF_PLATFORM}\".")
  endif ()
elseif (${CURRENT_GEN} STREQUAL "Xcode" AND CMAKE_HOST_APPLE)
  if (HASILWGDF_PLATFORM STREQUAL "iOS")
    set (CMAKE_SYSTEM_NAME "iOS")
    if (HASILWGDF_PLATFORM_VARIANT STREQUAL "AppleSimulator")
      set (CMAKE_OSX_SYSROOT "iphonesimulator")
    elseif (HASILWGDF_PLATFORM_VARIANT STREQUAL "AppleOS")
      set (CMAKE_OSX_SYSROOT "iphoneos")
    elseif (HASILWGDF_PLATFORM_VARIANT STREQUAL "AppleAll")
      set (CMAKE_IOS_INSTALL_COMBINED YES)
    else ()
      message (FATAL_ERROR "Variation \"${HASILWGDF_PLATFORM_VARIANT}\" for platform \"${HASILWGDF_PLATFORM}\" is not supported.")
    endif ()
  elseif (HASILWGDF_PLATFORM STREQUAL "macOS")
    set (CMAKE_SYSTEM_NAME "Darwin")
    if (HASILWGDF_PLATFORM_VARIANT NOT STREQUAL "")
      message (FATAL_ERROR "Variation \"${HASILWGDF_PLATFORM_VARIANT}\" for platform \"${HASILWGDF_PLATFORM}\" is not supported.")
    endif ()
  elseif (HASILWGDF_PLATFORM STREQUAL "tvOS")
    set (CMAKE_SYSTEM_NAME "tvOS")
    if (HASILWGDF_PLATFORM_VARIANT STREQUAL "AppleSimulator")
      set (CMAKE_OSX_SYSROOT "appletvsimulator")
    elseif (HASILWGDF_PLATFORM_VARIANT STREQUAL "AppleOS")
      set (CMAKE_OSX_SYSROOT "appletvos")
    elseif (HASILWGDF_PLATFORM_VARIANT STREQUAL "AppleAll")
      set (CMAKE_IOS_INSTALL_COMBINED YES)
    else ()
      message (FATAL_ERROR "Variation \"${HASILWGDF_PLATFORM_VARIANT}\" for platform \"${HASILWGDF_PLATFORM}\" is not supported.")
    endif ()
  elseif (HASILWGDF_PLATFORM STREQUAL "watchOS")
    set (CMAKE_SYSTEM_NAME "watchOS")
    if (HASILWGDF_PLATFORM_VARIANT STREQUAL "AppleSimulator")
      set (CMAKE_OSX_SYSROOT "watchsimulator")
    elseif (HASILWGDF_PLATFORM_VARIANT STREQUAL "AppleOS")
      set (CMAKE_OSX_SYSROOT "watchos")
    elseif (HASILWGDF_PLATFORM_VARIANT STREQUAL "AppleAll")
      set (CMAKE_IOS_INSTALL_COMBINED YES)
    else ()
      message (FATAL_ERROR "Variation \"${HASILWGDF_PLATFORM_VARIANT}\" for platform \"${HASILWGDF_PLATFORM}\" is not supported.")
    endif ()
  else ()
    message (FATAL_ERROR "Unable to use generator \"${CURRENT_GEN}\" with platform \"${HASILWGDF_PLATFORM}\".")
  endif ()
else ()
  message (FATAL_ERROR "Invalid or unsupported generator. Please use one of these: MinGW Makefiles, MSYS Makefiles, Ninja, Unix Makefiles, Visual Studio (12+), Xcode")
endif ()

function(compile_resources)
  file(GLOB BINARIES *)

	file(WRITE ${HEADER_FILE} "#pragma once\n\n")
	foreach (bin ${BINARIES})
		get_filename_component(FNAME ${bin} NAME_WE)
		file(READ ${bin} DATA)
		file(APPEND ${SPIRV_EMBED_FILE} "const uint32_t _${FNAME}[] =\n${DATA};\n")
	endforeach()
endfunction()
